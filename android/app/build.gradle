plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if(keystorePropertiesFile.exists()){
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "net.lamoss.recipe_inventory"
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "net.lamoss.recipe_inventory"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 23
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }
    packagingOptions {
        // 텍스트 인식 외의 모든 ML Kit 모델 제외
        exclude 'lib/**/libdigitalink.so'           // 디지털 잉크 인식
        exclude 'lib/**/libxeno_native.so'          // 기타
        exclude 'lib/**/libbarhopper_v2.so'         // 바코드 스캔
        exclude 'lib/**/libclassifier_jni.so'       // 이미지 분류
        exclude 'lib/**/libpredictor_jni.so'        // 예측 모델
        exclude 'lib/**/libtextclassifier3_jni_tclib.so' // 텍스트 분류
        exclude 'lib/**/libface_detector_v2_jni.so' // 얼굴 인식
        exclude 'lib/**/libtensorflowlite_jni.so'   // TensorFlow Lite
        exclude 'lib/**/liblanguage_id_jni.so'      // 언어 감지
        exclude 'lib/**/libtranslate_jni.so'        // 번역
        exclude 'lib/**/libmlkit_pose.so'           // 포즈 인식
    }

    signingConfigs{
        release{
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            aaptOptions {
                ignoreAssetsPattern '!mlkit_text_recognition:' // 텍스트 인식만 포함
            }
        }
        debug {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            aaptOptions {
                ignoreAssetsPattern '!mlkit_text_recognition:' // 텍스트 인식만 포함
            }
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'com.google.mlkit:text-recognition-korean:16.0.0'
    implementation "androidx.cardview:cardview:1.0.0"
}